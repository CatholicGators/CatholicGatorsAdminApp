// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MobileDrawer should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MobileDrawer
    closeDrawer={[MockFunction]}
    isOpen={false}
    login={[MockFunction]}
    logout={[MockFunction]}
    menuLinks={
      Array [
        Object {
          "href": "/",
          "icon": [Function],
          "needsAuthorization": false,
          "text": "Contact Form",
        },
        Object {
          "href": "/my-contacts",
          "icon": [Function],
          "needsAuthorization": false,
          "text": "My Contacts",
        },
        Object {
          "href": "/admin",
          "icon": [Function],
          "needsAuthorization": true,
          "text": "Admin",
        },
      ]
    }
    selectedPath="/"
    user={
      Object {
        "isAdmin": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div
          className={null}
        >
          <div
            className={null}
          >
            <div
              className={null}
            >
              <WithStyles(Avatar)
                className={null}
                id="avatar"
              />
              <div>
                <WithStyles(Typography)
                  className={null}
                  variant="h6"
                />
                <WithStyles(Typography)
                  className={null}
                  variant="subtitle1"
                />
              </div>
            </div>
          </div>
          <WithStyles(Divider) />
          <WithStyles(List)>
            <NavLink
              activeClassName="active"
              aria-current="page"
              className={null}
              exact={true}
              onClick={[Function]}
              to="/"
            >
              <WithStyles(ListItem)
                button={true}
                selected={true}
              >
                <WithStyles(ListItemIcon)>
                  <pure(FormatAlignLeftIcon) />
                </WithStyles(ListItemIcon)>
                <WithStyles(ListItemText)
                  primary="Contact Form"
                />
              </WithStyles(ListItem)>
            </NavLink>
            <NavLink
              activeClassName="active"
              aria-current="page"
              className={null}
              exact={true}
              onClick={[Function]}
              to="/my-contacts"
            >
              <WithStyles(ListItem)
                button={true}
                selected={false}
              >
                <WithStyles(ListItemIcon)>
                  <pure(InboxIcon) />
                </WithStyles(ListItemIcon)>
                <WithStyles(ListItemText)
                  primary="My Contacts"
                />
              </WithStyles(ListItem)>
            </NavLink>
            <NavLink
              activeClassName="active"
              aria-current="page"
              className={null}
              exact={true}
              onClick={[Function]}
              to="/admin"
            >
              <WithStyles(ListItem)
                button={true}
                selected={false}
              >
                <WithStyles(ListItemIcon)>
                  <pure(VpnKeyIcon) />
                </WithStyles(ListItemIcon)>
                <WithStyles(ListItemText)
                  primary="Admin"
                />
              </WithStyles(ListItem)>
            </NavLink>
          </WithStyles(List)>
        </div>,
        <div>
          <WithStyles(Divider) />
          <WithStyles(ListItem)
            button={true}
            id="logout-btn"
            onClick={[Function]}
          >
            <WithStyles(ListItemIcon)>
              <pure(ExitToAppIcon) />
            </WithStyles(ListItemIcon)>
            <WithStyles(ListItemText)
              color="error"
              primary="Logout"
            />
          </WithStyles(ListItem)>
        </div>,
      ],
      "onClose": [Function],
      "open": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className={null}
            >
              <div
                className={null}
              >
                <WithStyles(Avatar)
                  className={null}
                  id="avatar"
                />
                <div>
                  <WithStyles(Typography)
                    className={null}
                    variant="h6"
                  />
                  <WithStyles(Typography)
                    className={null}
                    variant="subtitle1"
                  />
                </div>
              </div>
            </div>,
            <WithStyles(Divider) />,
            <WithStyles(List)>
              <NavLink
                activeClassName="active"
                aria-current="page"
                className={null}
                exact={true}
                onClick={[Function]}
                to="/"
              >
                <WithStyles(ListItem)
                  button={true}
                  selected={true}
                >
                  <WithStyles(ListItemIcon)>
                    <pure(FormatAlignLeftIcon) />
                  </WithStyles(ListItemIcon)>
                  <WithStyles(ListItemText)
                    primary="Contact Form"
                  />
                </WithStyles(ListItem)>
              </NavLink>
              <NavLink
                activeClassName="active"
                aria-current="page"
                className={null}
                exact={true}
                onClick={[Function]}
                to="/my-contacts"
              >
                <WithStyles(ListItem)
                  button={true}
                  selected={false}
                >
                  <WithStyles(ListItemIcon)>
                    <pure(InboxIcon) />
                  </WithStyles(ListItemIcon)>
                  <WithStyles(ListItemText)
                    primary="My Contacts"
                  />
                </WithStyles(ListItem)>
              </NavLink>
              <NavLink
                activeClassName="active"
                aria-current="page"
                className={null}
                exact={true}
                onClick={[Function]}
                to="/admin"
              >
                <WithStyles(ListItem)
                  button={true}
                  selected={false}
                >
                  <WithStyles(ListItemIcon)>
                    <pure(VpnKeyIcon) />
                  </WithStyles(ListItemIcon)>
                  <WithStyles(ListItemText)
                    primary="Admin"
                  />
                </WithStyles(ListItem)>
              </NavLink>
            </WithStyles(List)>,
          ],
          "className": null,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className={null}
              >
                <WithStyles(Avatar)
                  className={null}
                  id="avatar"
                />
                <div>
                  <WithStyles(Typography)
                    className={null}
                    variant="h6"
                  />
                  <WithStyles(Typography)
                    className={null}
                    variant="subtitle1"
                  />
                </div>
              </div>,
              "className": null,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <WithStyles(Avatar)
                    className={null}
                    id="avatar"
                  />,
                  <div>
                    <WithStyles(Typography)
                      className={null}
                      variant="h6"
                    />
                    <WithStyles(Typography)
                      className={null}
                      variant="subtitle1"
                    />
                  </div>,
                ],
                "className": null,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": null,
                    "id": "avatar",
                    "src": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <WithStyles(Typography)
                        className={null}
                        variant="h6"
                      />,
                      <WithStyles(Typography)
                        className={null}
                        variant="subtitle1"
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": undefined,
                        "className": null,
                        "variant": "h6",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": undefined,
                        "className": null,
                        "variant": "subtitle1",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className={null}
                  exact={true}
                  onClick={[Function]}
                  to="/"
                >
                  <WithStyles(ListItem)
                    button={true}
                    selected={true}
                  >
                    <WithStyles(ListItemIcon)>
                      <pure(FormatAlignLeftIcon) />
                    </WithStyles(ListItemIcon)>
                    <WithStyles(ListItemText)
                      primary="Contact Form"
                    />
                  </WithStyles(ListItem)>
                </NavLink>,
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className={null}
                  exact={true}
                  onClick={[Function]}
                  to="/my-contacts"
                >
                  <WithStyles(ListItem)
                    button={true}
                    selected={false}
                  >
                    <WithStyles(ListItemIcon)>
                      <pure(InboxIcon) />
                    </WithStyles(ListItemIcon)>
                    <WithStyles(ListItemText)
                      primary="My Contacts"
                    />
                  </WithStyles(ListItem)>
                </NavLink>,
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className={null}
                  exact={true}
                  onClick={[Function]}
                  to="/admin"
                >
                  <WithStyles(ListItem)
                    button={true}
                    selected={false}
                  >
                    <WithStyles(ListItemIcon)>
                      <pure(VpnKeyIcon) />
                    </WithStyles(ListItemIcon)>
                    <WithStyles(ListItemText)
                      primary="Admin"
                    />
                  </WithStyles(ListItem)>
                </NavLink>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "Contact Form",
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "aria-current": "page",
                  "children": <WithStyles(ListItem)
                    button={true}
                    selected={true}
                  >
                    <WithStyles(ListItemIcon)>
                      <pure(FormatAlignLeftIcon) />
                    </WithStyles(ListItemIcon)>
                    <WithStyles(ListItemText)
                      primary="Contact Form"
                    />
                  </WithStyles(ListItem)>,
                  "className": null,
                  "exact": true,
                  "onClick": [Function],
                  "to": "/",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "Contact Form",
                  "nodeType": "class",
                  "props": Object {
                    "button": true,
                    "children": Array [
                      <WithStyles(ListItemIcon)>
                        <pure(FormatAlignLeftIcon) />
                      </WithStyles(ListItemIcon)>,
                      <WithStyles(ListItemText)
                        primary="Contact Form"
                      />,
                    ],
                    "selected": true,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <pure(FormatAlignLeftIcon) />,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "primary": "Contact Form",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "My Contacts",
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "aria-current": "page",
                  "children": <WithStyles(ListItem)
                    button={true}
                    selected={false}
                  >
                    <WithStyles(ListItemIcon)>
                      <pure(InboxIcon) />
                    </WithStyles(ListItemIcon)>
                    <WithStyles(ListItemText)
                      primary="My Contacts"
                    />
                  </WithStyles(ListItem)>,
                  "className": null,
                  "exact": true,
                  "onClick": [Function],
                  "to": "/my-contacts",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "My Contacts",
                  "nodeType": "class",
                  "props": Object {
                    "button": true,
                    "children": Array [
                      <WithStyles(ListItemIcon)>
                        <pure(InboxIcon) />
                      </WithStyles(ListItemIcon)>,
                      <WithStyles(ListItemText)
                        primary="My Contacts"
                      />,
                    ],
                    "selected": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <pure(InboxIcon) />,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "primary": "My Contacts",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Admin",
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "aria-current": "page",
                  "children": <WithStyles(ListItem)
                    button={true}
                    selected={false}
                  >
                    <WithStyles(ListItemIcon)>
                      <pure(VpnKeyIcon) />
                    </WithStyles(ListItemIcon)>
                    <WithStyles(ListItemText)
                      primary="Admin"
                    />
                  </WithStyles(ListItem)>,
                  "className": null,
                  "exact": true,
                  "onClick": [Function],
                  "to": "/admin",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": "Admin",
                  "nodeType": "class",
                  "props": Object {
                    "button": true,
                    "children": Array [
                      <WithStyles(ListItemIcon)>
                        <pure(VpnKeyIcon) />
                      </WithStyles(ListItemIcon)>,
                      <WithStyles(ListItemText)
                        primary="Admin"
                      />,
                    ],
                    "selected": false,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <pure(VpnKeyIcon) />,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "primary": "Admin",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(Divider) />,
            <WithStyles(ListItem)
              button={true}
              id="logout-btn"
              onClick={[Function]}
            >
              <WithStyles(ListItemIcon)>
                <pure(ExitToAppIcon) />
              </WithStyles(ListItemIcon)>
              <WithStyles(ListItemText)
                color="error"
                primary="Logout"
              />
            </WithStyles(ListItem)>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "logout",
            "nodeType": "class",
            "props": Object {
              "button": true,
              "children": Array [
                <WithStyles(ListItemIcon)>
                  <pure(ExitToAppIcon) />
                </WithStyles(ListItemIcon)>,
                <WithStyles(ListItemText)
                  color="error"
                  primary="Logout"
                />,
              ],
              "id": "logout-btn",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <pure(ExitToAppIcon) />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "color": "error",
                  "primary": "Logout",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className={null}
          >
            <div
              className={null}
            >
              <div
                className={null}
              >
                <WithStyles(Avatar)
                  className={null}
                  id="avatar"
                />
                <div>
                  <WithStyles(Typography)
                    className={null}
                    variant="h6"
                  />
                  <WithStyles(Typography)
                    className={null}
                    variant="subtitle1"
                  />
                </div>
              </div>
            </div>
            <WithStyles(Divider) />
            <WithStyles(List)>
              <NavLink
                activeClassName="active"
                aria-current="page"
                className={null}
                exact={true}
                onClick={[Function]}
                to="/"
              >
                <WithStyles(ListItem)
                  button={true}
                  selected={true}
                >
                  <WithStyles(ListItemIcon)>
                    <pure(FormatAlignLeftIcon) />
                  </WithStyles(ListItemIcon)>
                  <WithStyles(ListItemText)
                    primary="Contact Form"
                  />
                </WithStyles(ListItem)>
              </NavLink>
              <NavLink
                activeClassName="active"
                aria-current="page"
                className={null}
                exact={true}
                onClick={[Function]}
                to="/my-contacts"
              >
                <WithStyles(ListItem)
                  button={true}
                  selected={false}
                >
                  <WithStyles(ListItemIcon)>
                    <pure(InboxIcon) />
                  </WithStyles(ListItemIcon)>
                  <WithStyles(ListItemText)
                    primary="My Contacts"
                  />
                </WithStyles(ListItem)>
              </NavLink>
              <NavLink
                activeClassName="active"
                aria-current="page"
                className={null}
                exact={true}
                onClick={[Function]}
                to="/admin"
              >
                <WithStyles(ListItem)
                  button={true}
                  selected={false}
                >
                  <WithStyles(ListItemIcon)>
                    <pure(VpnKeyIcon) />
                  </WithStyles(ListItemIcon)>
                  <WithStyles(ListItemText)
                    primary="Admin"
                  />
                </WithStyles(ListItem)>
              </NavLink>
            </WithStyles(List)>
          </div>,
          <div>
            <WithStyles(Divider) />
            <WithStyles(ListItem)
              button={true}
              id="logout-btn"
              onClick={[Function]}
            >
              <WithStyles(ListItemIcon)>
                <pure(ExitToAppIcon) />
              </WithStyles(ListItemIcon)>
              <WithStyles(ListItemText)
                color="error"
                primary="Logout"
              />
            </WithStyles(ListItem)>
          </div>,
        ],
        "onClose": [Function],
        "open": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className={null}
              >
                <div
                  className={null}
                >
                  <WithStyles(Avatar)
                    className={null}
                    id="avatar"
                  />
                  <div>
                    <WithStyles(Typography)
                      className={null}
                      variant="h6"
                    />
                    <WithStyles(Typography)
                      className={null}
                      variant="subtitle1"
                    />
                  </div>
                </div>
              </div>,
              <WithStyles(Divider) />,
              <WithStyles(List)>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className={null}
                  exact={true}
                  onClick={[Function]}
                  to="/"
                >
                  <WithStyles(ListItem)
                    button={true}
                    selected={true}
                  >
                    <WithStyles(ListItemIcon)>
                      <pure(FormatAlignLeftIcon) />
                    </WithStyles(ListItemIcon)>
                    <WithStyles(ListItemText)
                      primary="Contact Form"
                    />
                  </WithStyles(ListItem)>
                </NavLink>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className={null}
                  exact={true}
                  onClick={[Function]}
                  to="/my-contacts"
                >
                  <WithStyles(ListItem)
                    button={true}
                    selected={false}
                  >
                    <WithStyles(ListItemIcon)>
                      <pure(InboxIcon) />
                    </WithStyles(ListItemIcon)>
                    <WithStyles(ListItemText)
                      primary="My Contacts"
                    />
                  </WithStyles(ListItem)>
                </NavLink>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className={null}
                  exact={true}
                  onClick={[Function]}
                  to="/admin"
                >
                  <WithStyles(ListItem)
                    button={true}
                    selected={false}
                  >
                    <WithStyles(ListItemIcon)>
                      <pure(VpnKeyIcon) />
                    </WithStyles(ListItemIcon)>
                    <WithStyles(ListItemText)
                      primary="Admin"
                    />
                  </WithStyles(ListItem)>
                </NavLink>
              </WithStyles(List)>,
            ],
            "className": null,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className={null}
                >
                  <WithStyles(Avatar)
                    className={null}
                    id="avatar"
                  />
                  <div>
                    <WithStyles(Typography)
                      className={null}
                      variant="h6"
                    />
                    <WithStyles(Typography)
                      className={null}
                      variant="subtitle1"
                    />
                  </div>
                </div>,
                "className": null,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <WithStyles(Avatar)
                      className={null}
                      id="avatar"
                    />,
                    <div>
                      <WithStyles(Typography)
                        className={null}
                        variant="h6"
                      />
                      <WithStyles(Typography)
                        className={null}
                        variant="subtitle1"
                      />
                    </div>,
                  ],
                  "className": null,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": null,
                      "id": "avatar",
                      "src": undefined,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <WithStyles(Typography)
                          className={null}
                          variant="h6"
                        />,
                        <WithStyles(Typography)
                          className={null}
                          variant="subtitle1"
                        />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": undefined,
                          "className": null,
                          "variant": "h6",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": undefined,
                          "className": null,
                          "variant": "subtitle1",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className={null}
                    exact={true}
                    onClick={[Function]}
                    to="/"
                  >
                    <WithStyles(ListItem)
                      button={true}
                      selected={true}
                    >
                      <WithStyles(ListItemIcon)>
                        <pure(FormatAlignLeftIcon) />
                      </WithStyles(ListItemIcon)>
                      <WithStyles(ListItemText)
                        primary="Contact Form"
                      />
                    </WithStyles(ListItem)>
                  </NavLink>,
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className={null}
                    exact={true}
                    onClick={[Function]}
                    to="/my-contacts"
                  >
                    <WithStyles(ListItem)
                      button={true}
                      selected={false}
                    >
                      <WithStyles(ListItemIcon)>
                        <pure(InboxIcon) />
                      </WithStyles(ListItemIcon)>
                      <WithStyles(ListItemText)
                        primary="My Contacts"
                      />
                    </WithStyles(ListItem)>
                  </NavLink>,
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className={null}
                    exact={true}
                    onClick={[Function]}
                    to="/admin"
                  >
                    <WithStyles(ListItem)
                      button={true}
                      selected={false}
                    >
                      <WithStyles(ListItemIcon)>
                        <pure(VpnKeyIcon) />
                      </WithStyles(ListItemIcon)>
                      <WithStyles(ListItemText)
                        primary="Admin"
                      />
                    </WithStyles(ListItem)>
                  </NavLink>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "Contact Form",
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "aria-current": "page",
                    "children": <WithStyles(ListItem)
                      button={true}
                      selected={true}
                    >
                      <WithStyles(ListItemIcon)>
                        <pure(FormatAlignLeftIcon) />
                      </WithStyles(ListItemIcon)>
                      <WithStyles(ListItemText)
                        primary="Contact Form"
                      />
                    </WithStyles(ListItem)>,
                    "className": null,
                    "exact": true,
                    "onClick": [Function],
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": "Contact Form",
                    "nodeType": "class",
                    "props": Object {
                      "button": true,
                      "children": Array [
                        <WithStyles(ListItemIcon)>
                          <pure(FormatAlignLeftIcon) />
                        </WithStyles(ListItemIcon)>,
                        <WithStyles(ListItemText)
                          primary="Contact Form"
                        />,
                      ],
                      "selected": true,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <pure(FormatAlignLeftIcon) />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "primary": "Contact Form",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "My Contacts",
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "aria-current": "page",
                    "children": <WithStyles(ListItem)
                      button={true}
                      selected={false}
                    >
                      <WithStyles(ListItemIcon)>
                        <pure(InboxIcon) />
                      </WithStyles(ListItemIcon)>
                      <WithStyles(ListItemText)
                        primary="My Contacts"
                      />
                    </WithStyles(ListItem)>,
                    "className": null,
                    "exact": true,
                    "onClick": [Function],
                    "to": "/my-contacts",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": "My Contacts",
                    "nodeType": "class",
                    "props": Object {
                      "button": true,
                      "children": Array [
                        <WithStyles(ListItemIcon)>
                          <pure(InboxIcon) />
                        </WithStyles(ListItemIcon)>,
                        <WithStyles(ListItemText)
                          primary="My Contacts"
                        />,
                      ],
                      "selected": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <pure(InboxIcon) />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "primary": "My Contacts",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Admin",
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "aria-current": "page",
                    "children": <WithStyles(ListItem)
                      button={true}
                      selected={false}
                    >
                      <WithStyles(ListItemIcon)>
                        <pure(VpnKeyIcon) />
                      </WithStyles(ListItemIcon)>
                      <WithStyles(ListItemText)
                        primary="Admin"
                      />
                    </WithStyles(ListItem)>,
                    "className": null,
                    "exact": true,
                    "onClick": [Function],
                    "to": "/admin",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": "Admin",
                    "nodeType": "class",
                    "props": Object {
                      "button": true,
                      "children": Array [
                        <WithStyles(ListItemIcon)>
                          <pure(VpnKeyIcon) />
                        </WithStyles(ListItemIcon)>,
                        <WithStyles(ListItemText)
                          primary="Admin"
                        />,
                      ],
                      "selected": false,
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <pure(VpnKeyIcon) />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "primary": "Admin",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <WithStyles(Divider) />,
              <WithStyles(ListItem)
                button={true}
                id="logout-btn"
                onClick={[Function]}
              >
                <WithStyles(ListItemIcon)>
                  <pure(ExitToAppIcon) />
                </WithStyles(ListItemIcon)>
                <WithStyles(ListItemText)
                  color="error"
                  primary="Logout"
                />
              </WithStyles(ListItem)>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "logout",
              "nodeType": "class",
              "props": Object {
                "button": true,
                "children": Array [
                  <WithStyles(ListItemIcon)>
                    <pure(ExitToAppIcon) />
                  </WithStyles(ListItemIcon)>,
                  <WithStyles(ListItemText)
                    color="error"
                    primary="Logout"
                  />,
                ],
                "id": "logout-btn",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <pure(ExitToAppIcon) />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "color": "error",
                    "primary": "Logout",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
