// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Admin should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Admin
    getUsers={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(Paper)
        className={null}
      >
        <WithStyles(Toolbar)>
          <WithStyles(Typography)
            variant="h6"
          >
            Users
          </WithStyles(Typography)>
        </WithStyles(Toolbar)>
        <div
          className={null}
        >
          <WithStyles(CircularProgress)
            size="60px"
          />
        </div>
      </WithStyles(Paper)>,
      "className": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Toolbar)>
            <WithStyles(Typography)
              variant="h6"
            >
              Users
            </WithStyles(Typography)>
          </WithStyles(Toolbar)>,
          null,
          <div
            className={null}
          >
            <WithStyles(CircularProgress)
              size="60px"
            />
          </div>,
        ],
        "className": null,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Typography)
              variant="h6"
            >
              Users
            </WithStyles(Typography)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Users",
              "variant": "h6",
            },
            "ref": null,
            "rendered": "Users",
            "type": [Function],
          },
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <WithStyles(CircularProgress)
              size="60px"
            />,
            "className": null,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "size": "60px",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(Paper)
          className={null}
        >
          <WithStyles(Toolbar)>
            <WithStyles(Typography)
              variant="h6"
            >
              Users
            </WithStyles(Typography)>
          </WithStyles(Toolbar)>
          <div
            className={null}
          >
            <WithStyles(CircularProgress)
              size="60px"
            />
          </div>
        </WithStyles(Paper)>,
        "className": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Toolbar)>
              <WithStyles(Typography)
                variant="h6"
              >
                Users
              </WithStyles(Typography)>
            </WithStyles(Toolbar)>,
            null,
            <div
              className={null}
            >
              <WithStyles(CircularProgress)
                size="60px"
              />
            </div>,
          ],
          "className": null,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Typography)
                variant="h6"
              >
                Users
              </WithStyles(Typography)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Users",
                "variant": "h6",
              },
              "ref": null,
              "rendered": "Users",
              "type": [Function],
            },
            "type": [Function],
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <WithStyles(CircularProgress)
                size="60px"
              />,
              "className": null,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "size": "60px",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
