// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Admin should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Admin
    getUsers={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <WithStyles(Paper)
        className={null}
      >
        <WithStyles(Toolbar)>
          <WithStyles(Typography)
            variant="h6"
          >
            Users
          </WithStyles(Typography)>
        </WithStyles(Toolbar)>
        <WithStyles(Table)>
          <WithStyles(TableHead)>
            <WithStyles(TableRow)>
              <WithStyles(TableCell)>
                Profile Pic
              </WithStyles(TableCell)>
              <WithStyles(TableCell)>
                Name
              </WithStyles(TableCell)>
              <WithStyles(TableCell)>
                Email
              </WithStyles(TableCell)>
              <WithStyles(TableCell)>
                Approved
              </WithStyles(TableCell)>
              <WithStyles(TableCell)>
                Admin
              </WithStyles(TableCell)>
            </WithStyles(TableRow)>
          </WithStyles(TableHead)>
          <WithStyles(TableBody) />
        </WithStyles(Table)>
      </WithStyles(Paper)>,
      "className": null,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Toolbar)>
            <WithStyles(Typography)
              variant="h6"
            >
              Users
            </WithStyles(Typography)>
          </WithStyles(Toolbar)>,
          <WithStyles(Table)>
            <WithStyles(TableHead)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)>
                  Profile Pic
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Name
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Email
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Approved
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Admin
                </WithStyles(TableCell)>
              </WithStyles(TableRow)>
            </WithStyles(TableHead)>
            <WithStyles(TableBody) />
          </WithStyles(Table)>,
        ],
        "className": null,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Typography)
              variant="h6"
            >
              Users
            </WithStyles(Typography)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Users",
              "variant": "h6",
            },
            "ref": null,
            "rendered": "Users",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    Profile Pic
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Name
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Email
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Approved
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Admin
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>,
              <WithStyles(TableBody) />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    Profile Pic
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Name
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Email
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Approved
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Admin
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <WithStyles(TableCell)>
                      Profile Pic
                    </WithStyles(TableCell)>,
                    <WithStyles(TableCell)>
                      Name
                    </WithStyles(TableCell)>,
                    <WithStyles(TableCell)>
                      Email
                    </WithStyles(TableCell)>,
                    <WithStyles(TableCell)>
                      Approved
                    </WithStyles(TableCell)>,
                    <WithStyles(TableCell)>
                      Admin
                    </WithStyles(TableCell)>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Profile Pic",
                    },
                    "ref": null,
                    "rendered": "Profile Pic",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Name",
                    },
                    "ref": null,
                    "rendered": "Name",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Email",
                    },
                    "ref": null,
                    "rendered": "Email",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Approved",
                    },
                    "ref": null,
                    "rendered": "Approved",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Admin",
                    },
                    "ref": null,
                    "rendered": "Admin",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <WithStyles(Paper)
          className={null}
        >
          <WithStyles(Toolbar)>
            <WithStyles(Typography)
              variant="h6"
            >
              Users
            </WithStyles(Typography)>
          </WithStyles(Toolbar)>
          <WithStyles(Table)>
            <WithStyles(TableHead)>
              <WithStyles(TableRow)>
                <WithStyles(TableCell)>
                  Profile Pic
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Name
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Email
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Approved
                </WithStyles(TableCell)>
                <WithStyles(TableCell)>
                  Admin
                </WithStyles(TableCell)>
              </WithStyles(TableRow)>
            </WithStyles(TableHead)>
            <WithStyles(TableBody) />
          </WithStyles(Table)>
        </WithStyles(Paper)>,
        "className": null,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(Toolbar)>
              <WithStyles(Typography)
                variant="h6"
              >
                Users
              </WithStyles(Typography)>
            </WithStyles(Toolbar)>,
            <WithStyles(Table)>
              <WithStyles(TableHead)>
                <WithStyles(TableRow)>
                  <WithStyles(TableCell)>
                    Profile Pic
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Name
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Email
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Approved
                  </WithStyles(TableCell)>
                  <WithStyles(TableCell)>
                    Admin
                  </WithStyles(TableCell)>
                </WithStyles(TableRow)>
              </WithStyles(TableHead)>
              <WithStyles(TableBody) />
            </WithStyles(Table)>,
          ],
          "className": null,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Typography)
                variant="h6"
              >
                Users
              </WithStyles(Typography)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Users",
                "variant": "h6",
              },
              "ref": null,
              "rendered": "Users",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(TableHead)>
                  <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      Profile Pic
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Name
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Email
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Approved
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Admin
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>
                </WithStyles(TableHead)>,
                <WithStyles(TableBody) />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <WithStyles(TableRow)>
                    <WithStyles(TableCell)>
                      Profile Pic
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Name
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Email
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Approved
                    </WithStyles(TableCell)>
                    <WithStyles(TableCell)>
                      Admin
                    </WithStyles(TableCell)>
                  </WithStyles(TableRow)>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <WithStyles(TableCell)>
                        Profile Pic
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)>
                        Name
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)>
                        Email
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)>
                        Approved
                      </WithStyles(TableCell)>,
                      <WithStyles(TableCell)>
                        Admin
                      </WithStyles(TableCell)>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Profile Pic",
                      },
                      "ref": null,
                      "rendered": "Profile Pic",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Name",
                      },
                      "ref": null,
                      "rendered": "Name",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Email",
                      },
                      "ref": null,
                      "rendered": "Email",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Approved",
                      },
                      "ref": null,
                      "rendered": "Approved",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Admin",
                      },
                      "ref": null,
                      "rendered": "Admin",
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": null,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
